enum CharacterType {
    PC,
    NPC
}

enum SheetType {
    PATHFINDER,
    DND5ED,
    DND4ED,
    GURPS,
    NPC
}

type User {
    id: Int!
    full_name: String
    email: String
    created_at: String
    characters: [Character]
}

type Character {
    created_at: String
    id: Int!
    name: String
    character_type: CharacterType
    creator_id: Int!
    creator: User
    sheet: Sheet
}

type Sheet {
    id: Int!
    character_id: Int!
    sheet_type: SheetType
    dnd5ed_sheet: DND5EDSheet
    created_at: String
}

type DND5EDSheet {
    id: Int!
    sheet_id: Int!
    race: String
    level: String
    background: String
    alignment: String
    experience_points: Int
    classes: [DND5EDClasses]
    stats: DND5EDStats
    features_and_traits: [DND5EDFeaturesAndTraits]
    hitpoints: HitPoints
}

type DND5EDStats {
    strength: Int
    dexterity: Int
    constitution: Int
    inteligence: Int
    wisdom: Int
    charisma: Int
}

type DND5EDFeaturesAndTraits {
    title: String
    description: String
}

type DND5EDClasses {
    class_name: String
    level: Int
}

type DND5EDPersonality {
    personality_trais: String
    ideals: String
    bonds: String
    flaws: String
}

type HitPoints {
    current_hitpoints: Int
    max_hitpoints: Int
}

input createUserInput {
    full_name: String!
    email: String!
}

input updateUserInput {
    id:Int!
    full_name: String
    email: String
}

input createCharacterInput {
    name: String!
    creator_id: Int!
    character_type: CharacterType!
}

input createSheetInput {
    sheet_type: SheetType!
    character_id: Int!
}

input updateCharacterInput {
    id:Int!
    name: String!
}

type Query{
    user(id: Int!): User
    users: [User]
    character(id: Int!): Character
    characters: [Character]
}

type Mutation{
    createUser(user: createUserInput!):User
    updateUser(user: updateUserInput!):User
    deleteUser(id: Int!):String
    createCharacter(character: createCharacterInput!): Character
    deleteCharacter(id: Int!): String
    updateCharacter(character: updateCharacterInput!): Character
}